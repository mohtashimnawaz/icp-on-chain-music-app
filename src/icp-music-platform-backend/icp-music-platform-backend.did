type TrackVisibility = variant { Public; Private; InviteOnly };
type TrackRole = variant { Owner; Collaborator; Viewer };
type Activity = record { user_id: nat64; action: text; timestamp: nat64; details: text };

// Add new types for profile customization

type CollabRequestStatus = variant { Pending; Accepted; Declined };
type CollabRequest = record {
  id: nat64;
  from: nat64;
  to: nat64;
  track_id: nat64;
  message: opt text;
  status: CollabRequestStatus;
  timestamp: nat64;
};

type TaskStatus = variant { Open; InProgress; Completed; Cancelled };
type Task = record {
  id: nat64;
  track_id: nat64;
  assigned_to: nat64;
  description: text;
  status: TaskStatus;
  created_at: nat64;
  updated_at: nat64;
};

type TrackAnalytics = record {
  play_count: nat64;
  revenue: nat64;
  comments_count: nat64;
  ratings_count: nat64;
  avg_rating: nat8;
};

service : {
    "greet": (text) -> (text) query;
    "register_artist": (text, text, opt text, opt text, opt vec text) -> (opt record { id: nat64; name: text; bio: text; social: opt text; royalty_balance: nat64; profile_image_url: opt text; links: opt vec text });
    "get_artist": (nat64) -> (opt record { id: nat64; name: text; bio: text; social: opt text; royalty_balance: nat64 }) query;
    "update_artist": (nat64, text, text, opt text, opt text, opt vec text) -> (opt record { id: nat64; name: text; bio: text; social: opt text; royalty_balance: nat64; profile_image_url: opt text; links: opt vec text });
    "list_artists": () -> (vec record { id: nat64; name: text; bio: text; social: opt text; royalty_balance: nat64; profile_image_url: opt text; links: opt vec text }) query;
    "create_track": (text, text, vec nat64) -> (opt record {
        id: nat64;
        title: text;
        description: text;
        contributors: vec nat64;
        version: nat32;
        splits: opt vec record { id: nat64; pct: nat8 };
        comments: vec record { commenter: nat64; text: text };
        payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 };
        visibility: TrackVisibility;
        invited: vec nat64;
        roles: vec record { 0: nat64; 1: TrackRole };
        ratings: vec record { 0: nat64; 1: nat8 };
        tags: vec text;
        genre: opt text;
        play_count: nat64;
    });
    "get_track": (nat64) -> (opt record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } }) query;
    "update_track": (nat64, text, text, vec nat64, nat32) -> (opt record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } });
    "list_tracks": () -> (vec record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } }) query;
    "set_track_splits": (nat64, vec record { id: nat64; pct: nat8 }) -> (opt record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } });
    "get_track_splits": (nat64) -> (opt vec record { id: nat64; pct: nat8 }) query;
    "add_comment": (nat64, nat64, text) -> (opt record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } });
    "list_comments": (nat64) -> (vec record { commenter: nat64; text: text }) query;
    "add_track_version": (nat64, text, text, vec nat64) -> (opt record { version: nat32; title: text; description: text; contributors: vec nat64 });
    "get_track_versions": (nat64) -> (vec record { version: nat32; title: text; description: text; contributors: vec nat64 }) query;
    "search_tracks_by_title": (text) -> (vec record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } }) query;
    "search_tracks_by_contributor": (nat64) -> (vec record { id: nat64; title: text; description: text; contributors: vec nat64; version: nat32; splits: opt vec record { id: nat64; pct: nat8 }; comments: vec record { commenter: nat64; text: text }; payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 } }) query;
    "delete_track": (nat64) -> (bool);
    "distribute_payment": (nat64, nat64, nat64, nat64) -> (bool);
    "get_royalty_balance": (nat64) -> (nat64) query;
    "get_payment_history": (nat64) -> (vec record { payer: nat64; amount: nat64; timestamp: nat64 }) query;
    "set_track_visibility": (nat64, TrackVisibility) -> (bool);
    "get_track_visibility": (nat64) -> (opt TrackVisibility) query;
    "invite_user": (nat64, nat64) -> (bool);
    "assign_role": (nat64, nat64, TrackRole) -> (bool);
    "get_user_role": (nat64, nat64) -> (opt TrackRole) query;
    "get_user_activity": (nat64) -> (vec Activity) query;
    "get_recent_activity": (nat32) -> (vec Activity) query;
    "rate_track": (nat64, nat64, nat8) -> (bool);
    "get_track_rating": (nat64) -> (nat32, nat8) query;
    "get_user_track_rating": (nat64, nat64) -> (opt nat8) query;
    "add_tag": (nat64, text) -> (bool);
    "remove_tag": (nat64, text) -> (bool);
    "set_genre": (nat64, text) -> (bool);
    "get_genre": (nat64) -> (opt text) query;
    "search_tracks_by_tag": (text) -> (vec record {
        id: nat64;
        title: text;
        description: text;
        contributors: vec nat64;
        version: nat32;
        splits: opt vec record { id: nat64; pct: nat8 };
        comments: vec record { commenter: nat64; text: text };
        payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 };
        visibility: TrackVisibility;
        invited: vec nat64;
        roles: vec record { 0: nat64; 1: TrackRole };
        ratings: vec record { 0: nat64; 1: nat8 };
        tags: vec text;
        genre: opt text;
    }) query;
    "search_tracks_by_genre": (text) -> (vec record {
        id: nat64;
        title: text;
        description: text;
        contributors: vec nat64;
        version: nat32;
        splits: opt vec record { id: nat64; pct: nat8 };
        comments: vec record { commenter: nat64; text: text };
        payments: vec record { payer: nat64; amount: nat64; timestamp: nat64 };
        visibility: TrackVisibility;
        invited: vec nat64;
        roles: vec record { 0: nat64; 1: TrackRole };
        ratings: vec record { 0: nat64; 1: nat8 };
        tags: vec text;
        genre: opt text;
    }) query;
    // Collaboration request endpoints
    "send_collab_request": (nat64, nat64, nat64, opt text) -> (opt CollabRequest);
    "respond_collab_request": (nat64, bool) -> (opt CollabRequest);
    "list_collab_requests_for_user": (nat64) -> (vec CollabRequest) query;
    // Task management endpoints
    "create_task": (nat64, nat64, text) -> (opt Task);
    "update_task_status": (nat64, TaskStatus) -> (opt Task);
    "list_tasks_for_track": (nat64) -> (vec Task) query;
    "list_tasks_for_user": (nat64) -> (vec Task) query;
    "withdraw_royalties": (nat64, nat64) -> (bool);
    "increment_play_count": (nat64) -> (bool);
    "get_track_analytics": (nat64) -> (opt TrackAnalytics) query;
    "send_notification": (principal, text) -> (record { id: nat64; user_principal: principal; message: text; timestamp: nat64; read: bool });
    "list_notifications": () -> (vec record { id: nat64; user_principal: principal; message: text; timestamp: nat64; read: bool }) query;
    "mark_notification_read": (nat64) -> (bool);
    "ban_user": (principal) -> (bool);
    "delete_user_by_admin": (principal) -> (bool);
    "delete_artist_by_admin": (nat64) -> (bool);
    "delete_track_by_admin": (nat64) -> (bool);
    "follow_artist": (principal) -> (bool);
    "unfollow_artist": (principal) -> (bool);
    "list_followed_artists": () -> (vec principal) query;
    "follow_track": (nat64) -> (bool);
    "unfollow_track": (nat64) -> (bool);
    "list_followed_tracks": () -> (vec nat64) query;
    "promote_to_admin": () -> (bool);
}
